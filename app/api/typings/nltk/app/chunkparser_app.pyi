"""
This type stub file was generated by pyright.
"""

"""
A graphical tool for exploring the regular expression based chunk
parser ``nltk.chunk.RegexpChunkParser``.
"""
class RegexpChunkApp(object):
    """
    A graphical tool for exploring the regular expression based chunk
    parser ``nltk.chunk.RegexpChunkParser``.

    See ``HELP`` for instructional text.
    """
    TAGSET = ...
    HELP = ...
    HELP_AUTOTAG = ...
    _EVAL_DELAY = ...
    _EVAL_CHUNK = ...
    _EVAL_FREQ = ...
    _EVAL_DEMON_MIN = ...
    _EVAL_DEMON_MAX = ...
    _GRAMMARBOX_PARAMS = ...
    _HELPBOX_PARAMS = ...
    _DEVSETBOX_PARAMS = ...
    _STATUS_PARAMS = ...
    _FONT_PARAMS = ...
    _FRAME_PARAMS = ...
    _EVALBOX_PARAMS = ...
    _BUTTON_PARAMS = ...
    _HELPTAB_BG_COLOR = ...
    _HELPTAB_FG_COLOR = ...
    _HELPTAB_FG_PARAMS = ...
    _HELPTAB_BG_PARAMS = ...
    _HELPTAB_SPACER = ...
    def normalize_grammar(self, grammar):
        ...
    
    def __init__(self, devset_name=..., devset=..., grammar=..., chunk_label=..., tagset=...) -> None:
        """
        :param devset_name: The name of the development set; used for
            display & for save files.  If either the name 'treebank'
            or the name 'conll2000' is used, and devset is None, then
            devset will be set automatically.
        :param devset: A list of chunked sentences
        :param grammar: The initial grammar to display.
        :param tagset: Dictionary from tags to string descriptions, used
            for the help page.  Defaults to ``self.TAGSET``.
        """
        ...
    
    def toggle_show_trace(self, *e):
        ...
    
    _SCALE_N = ...
    _DRAW_LINES = ...
    _eval_demon_running = ...
    _showing_trace = ...
    def show_trace(self, *e):
        ...
    
    def show_help(self, tab):
        ...
    
    def destroy(self, *e):
        ...
    
    def show_devset(self, index=...):
        ...
    
    def update(self, *event):
        ...
    
    def reset(self):
        ...
    
    SAVE_GRAMMAR_TEMPLATE = ...
    def save_grammar(self, filename=...):
        ...
    
    def load_grammar(self, filename=...):
        ...
    
    def save_history(self, filename=...):
        ...
    
    def about(self, *e):
        ...
    
    def set_devset_size(self, size=...):
        ...
    
    def resize(self, size=...):
        ...
    
    def mainloop(self, *args, **kwargs):
        """
        Enter the Tkinter mainloop.  This function must be called if
        this demo is created from a non-interactive program (e.g.
        from a secript); otherwise, the demo will close as soon as
        the script completes.
        """
        ...
    


def app():
    ...

if __name__ == "__main__":
    ...
