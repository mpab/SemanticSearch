"""
This type stub file was generated by pyright.
"""

from nltk.corpus.reader.xmldocs import XMLCorpusReader, XMLCorpusView

class NKJPCorpusReader(XMLCorpusReader):
    WORDS_MODE = ...
    SENTS_MODE = ...
    HEADER_MODE = ...
    RAW_MODE = ...
    def __init__(self, root, fileids=...) -> None:
        """
        Corpus reader designed to work with National Corpus of Polish.
        See http://nkjp.pl/ for more details about NKJP.
        use example:
        import nltk
        import nkjp
        from nkjp import NKJPCorpusReader
        x = NKJPCorpusReader(root='/home/USER/nltk_data/corpora/nkjp/', fileids='') # obtain the whole corpus
        x.header()
        x.raw()
        x.words()
        x.tagged_words(tags=['subst', 'comp'])  #Link to find more tags: nkjp.pl/poliqarp/help/ense2.html
        x.sents()
        x = NKJPCorpusReader(root='/home/USER/nltk_data/corpora/nkjp/', fileids='Wilk*') # obtain particular file(s)
        x.header(fileids=['WilkDom', '/home/USER/nltk_data/corpora/nkjp/WilkWilczy'])
        x.tagged_words(fileids=['WilkDom', '/home/USER/nltk_data/corpora/nkjp/WilkWilczy'], tags=['subst', 'comp'])
        """
        ...
    
    def get_paths(self):
        ...
    
    def fileids(self):
        """
        Returns a list of file identifiers for the fileids that make up
        this corpus.
        """
        ...
    
    def add_root(self, fileid):
        """
        Add root if necessary to specified fileid.
        """
        ...
    
    @_parse_args
    def header(self, fileids=..., **kwargs):
        """
        Returns header(s) of specified fileids.
        """
        ...
    
    @_parse_args
    def sents(self, fileids=..., **kwargs):
        """
        Returns sentences in specified fileids.
        """
        ...
    
    @_parse_args
    def words(self, fileids=..., **kwargs):
        """
        Returns words in specified fileids.
        """
        ...
    
    @_parse_args
    def tagged_words(self, fileids=..., **kwargs):
        """
        Call with specified tags as a list, e.g. tags=['subst', 'comp'].
        Returns tagged words in specified fileids.
        """
        ...
    
    @_parse_args
    def raw(self, fileids=..., **kwargs):
        """
        Returns words in specified fileids.
        """
        ...
    


class NKJPCorpus_Header_View(XMLCorpusView):
    def __init__(self, filename, **kwargs) -> None:
        """
        HEADER_MODE
        A stream backed corpus view specialized for use with
        header.xml files in NKJP corpus.
        """
        ...
    
    def handle_query(self):
        ...
    
    def handle_elt(self, elt, context):
        ...
    


class XML_Tool:
    """
    Helper class creating xml file to one without references to nkjp: namespace.
    That's needed because the XMLCorpusView assumes that one can find short substrings
    of XML that are valid XML, which is not true if a namespace is declared at top level
    """
    def __init__(self, root, filename) -> None:
        ...
    
    def build_preprocessed_file(self):
        ...
    
    def remove_preprocessed_file(self):
        ...
    


class NKJPCorpus_Segmentation_View(XMLCorpusView):
    """
    A stream backed corpus view specialized for use with
    ann_segmentation.xml files in NKJP corpus.
    """
    def __init__(self, filename, **kwargs) -> None:
        ...
    
    def get_segm_id(self, example_word):
        ...
    
    def get_sent_beg(self, beg_word):
        ...
    
    def get_sent_end(self, end_word):
        ...
    
    def get_sentences(self, sent_segm):
        ...
    
    def remove_choice(self, segm):
        ...
    
    def handle_query(self):
        ...
    
    def handle_elt(self, elt, context):
        ...
    


class NKJPCorpus_Text_View(XMLCorpusView):
    """
    A stream backed corpus view specialized for use with
    text.xml files in NKJP corpus.
    """
    SENTS_MODE = ...
    RAW_MODE = ...
    def __init__(self, filename, **kwargs) -> None:
        ...
    
    def handle_query(self):
        ...
    
    def read_block(self, stream, tagspec=..., elt_handler=...):
        """
        Returns text as a list of sentences.
        """
        ...
    
    def get_segm_id(self, elt):
        ...
    
    def handle_elt(self, elt, context):
        ...
    


class NKJPCorpus_Morph_View(XMLCorpusView):
    """
    A stream backed corpus view specialized for use with
    ann_morphosyntax.xml files in NKJP corpus.
    """
    def __init__(self, filename, **kwargs) -> None:
        ...
    
    def handle_query(self):
        ...
    
    def handle_elt(self, elt, context):
        ...
    


