"""
This type stub file was generated by pyright.
"""

from nltk.corpus.reader.api import *
from nltk.corpus.reader.xmldocs import XMLCorpusReader

PARA = ...
SENT = ...
TAGGEDWORD = ...
WORD = ...
TYPE = ...
ANA = ...
TEXTID = ...
class TEICorpusView(StreamBackedCorpusView):
    def __init__(self, corpus_file, tagged, group_by_sent, group_by_para, tagset=..., head_len=..., textids=...) -> None:
        ...
    
    _pagesize = ...
    def read_block(self, stream):
        ...
    


class Pl196xCorpusReader(CategorizedCorpusReader, XMLCorpusReader):
    head_len = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    def decode_tag(self, tag):
        ...
    
    def textids(self, fileids=..., categories=...):
        """
        In the pl196x corpus each category is stored in single
        file and thus both methods provide identical functionality. In order
        to accommodate finer granularity, a non-standard textids() method was
        implemented. All the main functions can be supplied with a list
        of required chunks---giving much more control to the user.
        """
        ...
    
    def words(self, fileids=..., categories=..., textids=...):
        ...
    
    def sents(self, fileids=..., categories=..., textids=...):
        ...
    
    def paras(self, fileids=..., categories=..., textids=...):
        ...
    
    def tagged_words(self, fileids=..., categories=..., textids=...):
        ...
    
    def tagged_sents(self, fileids=..., categories=..., textids=...):
        ...
    
    def tagged_paras(self, fileids=..., categories=..., textids=...):
        ...
    
    def xml(self, fileids=..., categories=...):
        ...
    
    def raw(self, fileids=..., categories=...):
        ...
    


