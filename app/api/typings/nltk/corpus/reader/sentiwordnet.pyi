"""
This type stub file was generated by pyright.
"""

from nltk.corpus.reader import CorpusReader

"""
An NLTK interface for SentiWordNet

SentiWordNet is a lexical resource for opinion mining.
SentiWordNet assigns to each synset of WordNet three
sentiment scores: positivity, negativity, and objectivity.

For details about SentiWordNet see:
http://sentiwordnet.isti.cnr.it/

    >>> from nltk.corpus import sentiwordnet as swn
    >>> print(swn.senti_synset('breakdown.n.03'))
    <breakdown.n.03: PosScore=0.0 NegScore=0.25>
    >>> list(swn.senti_synsets('slow'))
    [SentiSynset('decelerate.v.01'), SentiSynset('slow.v.02'),
    SentiSynset('slow.v.03'), SentiSynset('slow.a.01'),
    SentiSynset('slow.a.02'), SentiSynset('dense.s.04'),
    SentiSynset('slow.a.04'), SentiSynset('boring.s.01'),
    SentiSynset('dull.s.08'), SentiSynset('slowly.r.01'),
    SentiSynset('behind.r.03')]
    >>> happy = swn.senti_synsets('happy', 'a')
    >>> happy0 = list(happy)[0]
    >>> happy0.pos_score()
    0.875
    >>> happy0.neg_score()
    0.0
    >>> happy0.obj_score()
    0.125
"""
class SentiWordNetCorpusReader(CorpusReader):
    def __init__(self, root, fileids, encoding=...) -> None:
        """
        Construct a new SentiWordNet Corpus Reader, using data from
   	the specified file.
        """
        ...
    
    def senti_synset(self, *vals):
        ...
    
    def senti_synsets(self, string, pos=...):
        ...
    
    def all_senti_synsets(self):
        ...
    


class SentiSynset(object):
    def __init__(self, pos_score, neg_score, synset) -> None:
        ...
    
    def pos_score(self):
        ...
    
    def neg_score(self):
        ...
    
    def obj_score(self):
        ...
    
    def __str__(self) -> str:
        """Prints just the Pos/Neg scores for now."""
        ...
    
    def __repr__(self):
        ...
    


