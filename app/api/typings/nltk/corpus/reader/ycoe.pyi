"""
This type stub file was generated by pyright.
"""

from nltk.corpus.reader.bracket_parse import BracketParseCorpusReader
from nltk.corpus.reader.tagged import TaggedCorpusReader
from nltk.corpus.reader.util import *
from nltk.corpus.reader.api import *

"""
Corpus reader for the York-Toronto-Helsinki Parsed Corpus of Old
English Prose (YCOE), a 1.5 million word syntactically-annotated
corpus of Old English prose texts. The corpus is distributed by the
Oxford Text Archive: http://www.ota.ahds.ac.uk/ It is not included
with NLTK.

The YCOE corpus is divided into 100 files, each representing
an Old English prose text. Tags used within each text complies
to the YCOE standard: http://www-users.york.ac.uk/~lang22/YCOE/YcoeHome.htm
"""
class YCOECorpusReader(CorpusReader):
    """
    Corpus reader for the York-Toronto-Helsinki Parsed Corpus of Old
    English Prose (YCOE), a 1.5 million word syntactically-annotated
    corpus of Old English prose texts.
    """
    def __init__(self, root, encoding=...) -> None:
        ...
    
    def documents(self, fileids=...):
        """
        Return a list of document identifiers for all documents in
        this corpus, or for the documents with the given file(s) if
        specified.
        """
        ...
    
    def fileids(self, documents=...):
        """
        Return a list of file identifiers for the files that make up
        this corpus, or that store the given document(s) if specified.
        """
        ...
    
    def words(self, documents=...):
        ...
    
    def sents(self, documents=...):
        ...
    
    def paras(self, documents=...):
        ...
    
    def tagged_words(self, documents=...):
        ...
    
    def tagged_sents(self, documents=...):
        ...
    
    def tagged_paras(self, documents=...):
        ...
    
    def parsed_sents(self, documents=...):
        ...
    


class YCOEParseCorpusReader(BracketParseCorpusReader):
    """Specialized version of the standard bracket parse corpus reader
    that strips out (CODE ...) and (ID ...) nodes."""
    ...


class YCOETaggedCorpusReader(TaggedCorpusReader):
    def __init__(self, root, items, encoding=...) -> None:
        ...
    


documents = ...
